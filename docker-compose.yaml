version: '3.8'
services:
  mongodb:
    image: mongo:4.4
    container_name: my_mongodb
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin_user
    #   MONGO_INITDB_ROOT_PASSWORD: admin_password
    #   MONGO_INITDB_DATABASE: sample_mflix
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
    restart: unless-stopped

    # volumes:
    #   - ./data/db:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: adminpass
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
    ports:
      - "8081:8081"
    depends_on:
      - mongodb

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: flask_webapp
    environment:
      - MONGO_URI=mongodb://admin:adminpass@192.168.11.12:27017/sample_mflix?authSource=admin
      # - MONGO_URI=mongodb://admin:adminpass@mongodb:27017/sample_mflix

    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    restart: always

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: flask_api
    environment:
      - MONGO_URI=mongodb://admin:adminpass@192.168.11.12:27017/sample_mflix?authSource=admin
      # - MONGO_URI=mongodb://admin:adminpass@mongodb:27017/sample_mflix

    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    restart: always



# version: '3.8'

# services:
#   mongo:
#     image: mongo:4.4
#     container_name: local-mongodb
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: admin
#       MONGO_INITDB_ROOT_PASSWORD: adminpass
#     restart: unless-stopped

volumes:
  mongo-data:
